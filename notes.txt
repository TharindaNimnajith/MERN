
Building web apps with the MERN stack with MongoDB Atlas and Google Cloud Platform


01. Introduction to MERN
02. Database concepts
03. Getting started with MongoDB Atlas
04. Creating the backend of the excercise tracker app
05. React introduction
06. Creating the frontend of the excercise tracker app
07. Connecting the frontend to the backend



01. Introduction to MERN


The MERN stack consists of the following technologies:

    01. MongoDB  : A document based open source database
    02. Express  : A web application framework for Node.js
    03. React    : A JavaScript frontend library for building user interfaces
    04. Node.js  : JavaScript runtime environment that executes JavaScript code outside of a browser (such as a server)

    05. Mongoose : Simple, schema based solution to model application data



02. Database concepts


Comparing Tabular (Relational) databases vs. MongoDB (Non-Relational database):

    01. Both are databases.
    02. Relational databases have Tables. MongoDB has Collections.
    03. Tables have Rows. In MongoDB there are Documents.
    04. Both have Indexes.
    05. In relational databases there are Joins. In MongoDB there is $lookup.
    06. In relational databases there are Foreign Keys. In MongoDB there are References.


MongoDB Documents:

    01. Looks similar to JSON (JavaScript Object Notation).
    02. MongoDB stores data on disk in the BSON (Binary JSON)vs.
    03. Can store Strings, Integers, Nested Documents, Arrays, Geo-Spatial Coordinates etc.

    example:

        {
            name : "Tharinda Nimnajith",
            title : "Software Engineer",
            address : {
                address1 : "No.52, Nagarukkarama road, Kalegana",
                city : "Galle",
                state : "Southern Province",
                postal_code : "80000"
            },
            topics : ["Java", "PHP", "SQL", "JavaScript"],
            employee_number : 1234,
            location : [44.9901, 123.0262]
        }



03. Getting started with MongoDB Atlas


Steps:

    01. https://www.mongodb.com/cloud/atlas
    02. Create an account and sign in
    03. Create a new project and build a cluster
    04. Cluster configuration
            01. Amazon Web Services (AWS)
            02. Google Cloud Platform
            03. Microsoft Azure
    05. Connect to cluster
            01. Whitelist IP address
            02. Create MongoDB user
            03. Choose a connection method
                    01. Connect with Mongo Shell
                    02. Connect your application
                    03. Connect with MongoDB Compass
            04. Copy the connection string



04. Creating the backend of the excercise tracker app


Exercise Tracker Application will contain:
    01. Exercises
    02. Users

Every excercise has one user.


MongoDB ObjectId:

    01. ObjectId is automatically generated by the MongoDB driver.
    02. ObjectId is unique across the collection.
    03. Can define our own ObjectId if we like as well.

    example:

        ObjectId("5c2fc4b3e52f37b7ee86096c")

        01. UNIX Timestamp (4 bytes) : 5c2fc4b3
        02. Random Value   (5 bytes) : e52f37b7ee
        03. Count          (3 bytes) : 86096c


Steps and commands for environment setup and installing necessary dependencies:

    01. Install node.js and setup environment paths.
            node -v
            npm -v
    02. Navigate to the directory where project needs to be created.
            npx create-react-app mern-excercise-tracker
    03. cd mern-excercise-tracker
        mkdir backend
        cd backend
    04. npm init -y
    05. npm install express cors mongoose dotenv
            cors   -> Cross Origin Resource Sharing
            dotenv -> load environment variables from .env file
    06. npm install -g nodemon
            Nodemon is a tool that automatically restart the node application when file changes in the directory are detected.
            -g -> globally installing the package
    07. Create server.js file in backend directory.
        Write necessary code in server.js file.
        Start the server.
            nodemon server
    08. Create .env file in backend directory.
        Add the environment variables.
    09. Create models directory in backend directory.
        Create user.model.js file and excercise.model.js files.
        Write necessary code in user.model.js file and excercise.model.js files.
    10. Create routes directory in backend directory.
        Create users.js file and excercises.js files.
        Write necessary code in users.js file and excercises.js files.
        Require and use users.js and exercises.js files in server.js file



05. React introduction






06. Creating the frontend of the excercise tracker app






07. Connecting the frontend to the backend



